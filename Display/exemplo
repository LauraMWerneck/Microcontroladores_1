/*
 * simple_display_mux.c
 *
 *  Created on: Feb 27, 2020
 *      Author: Renan Augusto Starke
 *      Instituto Federal de Santa Catarina
 */

#include <msp430.h>
#include <stdint.h>

#ifndef BITS_H_
#define BITS_H_

#define SET(BIT) (1 << BIT)
#define SET_BIT(Y,BIT) (Y |= (BIT))
#define CLR_BIT(Y,BIT) (Y &= ~(BIT))
#define CPL_BIT(Y,BIT) (Y ^= (BIT))
#define TST_BIT(Y,BIT) (Y & (BIT))

#endif /* BITS_H_ */

#include "simple_display_mux.h"

/* Tabela de convers o em flash: Anodo comum */
#ifdef COM_ANODO
const uint8_t convTable[] = {0x40, 0x79, 0x24, 0x30, 0x19, 0x12, 0x02,
        0x78, 0x00, 0x18, 0x08, 0x03, 0x46, 0x21, 0x06, 0x0E};
#endif


void display_mux_init() {

    /* Configura  o de portas */
    DISPLAYS_DATA_PORT_DIR = 0xff;
    DISPLAYS_DATA_PORT_OUT = 0;

    // DISPLAYS_MUX_PORT_DIR |=
    DISPLAYS_MUX_PORT_DIR |= BIT0 | BIT1 | BIT2;
    DISPLAYS_MUX_PORT_OUT = 0;
}


void display_mux_write(uint8_t data){

    int8_t n = NUMBER_DISPLAYS;
    //uint8_t d1 = data & 0x0f;
   // uint8_t d2 = data >> 4;
   // uint8_t d3 = data >> 8;

    //for (n=NUMBER_DISPLAYS; n > 0; n--){
        /* Desliga todos os displays */
    //   DISPLAYS_MUX_PORT_OUT = 0x03; /* ou 3 */

        /* Escreve valor convertido do d gito 1 no GPIO */
        //    DISPLAYS_DATA_PORT_OUT = convTable[d1];

        /* Liga display 1 */
        //    CLR_BIT (DISPLAYS_MUX_PORT_OUT,BIT0);

        /* Mant m um tempo ligado:  */
        //   _delay_cycles(10000);

        /* Desliga display 1 */
        //    DISPLAYS_MUX_PORT_OUT = 0x03;

        /* Escreve valor convertido do d gito 2 no GPIO */
        //    DISPLAYS_DATA_PORT_OUT = convTable[d2];

        /* Liga display 2 */
        //    CLR_BIT (DISPLAYS_MUX_PORT_OUT,BIT1);

        /* Mant m um tempo ligado */
        //   _delay_cycles(10000);

        /* Desliga display 2 */
        //    DISPLAYS_MUX_PORT_OUT = 0x03;

        /* Escreve valor convertido do d gito 3 no GPIO */
        //   DISPLAYS_DATA_PORT_OUT = convTable[d3];

        /* Liga display 3 */
        //    CLR_BIT (DISPLAYS_MUX_PORT_OUT,BIT2);

        /* Mant m um tempo ligado:  */
        //    _delay_cycles(10000);

        /* Desliga display 3 */
      // DISPLAYS_MUX_PORT_OUT = 0x03;
    //}

    for (n=0; n < NUMBER_DISPLAYS; n++){
        /* Desliga todos os displays */
        DISPLAYS_MUX_PORT_OUT = 0x03; /* ou 3 */

        /* Escreve valor convertido do d gito 1 no GPIO */


        DISPLAYS_DATA_PORT_OUT = convTable[(data >> n*4) & 0xf];

        /* Liga display 1 */
        CLR_BIT (DISPLAYS_MUX_PORT_OUT,   1<<(NUMBER_DISPLAYS - (n + 1)));

        /* Mant m um tempo ligado:  */
        _delay_cycles(10000);

        /* Desliga display 1 */
        //DISPLAYS_MUX_PORT_OUT = 0x03;
    }
}
